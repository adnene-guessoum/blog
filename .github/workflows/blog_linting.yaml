name: Django blog

on: [push, pull_request] 

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix: 
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version}}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      # Load our cached dependencies to speed things up.
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Task
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d

          # Install pip as package manager
      - name: Install and upgrade pip and poetry
        run: |
          python -m pip install --upgrade pip poetry

          # Install dependencies through task
      - name: Install Python Dependencies with poetry
        run: |
          ./bin/task install

      - name: Install Node Dependencies
        run: |
          npm --prefix ./frontend ci

          # Run linting
      - name: Update Python path for pylint
        run: |
          echo "PYTHONPATH=./myblog" >> $GITHUB_ENV

      - name: Lint code
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
          SQL_HOST: ${{ secrets.SQL_HOST }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          SQL_PORT: ${{ secrets.SQL_PORT }}
          SQL_USER: ${{ secrets.SQL_USER }}
        run: |
          ./bin/task lint
