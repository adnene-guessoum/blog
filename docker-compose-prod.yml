version: "3.8"

services:
  database:
    image: postgres:12.0-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod

  backend:
    image: "blog-backend-container"
    build:
      target: production_build
      context: .
      dockerfile: ./myblog/Dockerfile.prod
      cache_from:
        - "blog-backend-container"
      args:
        DJANGO_ENV: production
    command: gunicorn myblog.myblog.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - ./.env.prod
    depends_on:
      - database
    ports:
      - 8000:8000
    container_name: "backend"

  frontend:
    image: "blog-frontend-container"
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.prod
      cache_from:
        - "blog-frontend-container"
    env_file:
      - ./.env.prod
    container_name: "frontend"
    volumes:
      - front_build:/front/build

  nginx:
    image: nginx:latest
    ports:
      - 80:8080
    volumes:
      - ./nginx/configs/default.conf:/etc/nginx/conf.d/default.conf:ro
      - front_build:/var/www/front
    container_name: "web-server"
    depends_on:
      - backend
      - frontend

volumes:
  front_build:
  postgres_data:
